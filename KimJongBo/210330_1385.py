import queue

graph= {'1':set(['2','3','4','5','6','7']),
    '2':set(['3','7','8','9','10']),
    '3':set(['1','2','4','10','11','12']),
    '4':set(['4','1','3','5','12','13','14']),
    '5':set(['1','4','6','14','15','16']),
    '6':set(['1','5','7','16','17','18']),
    '7':set(['1','2','6','8','19','18']),
    '8':set(['2','7','9','19']),
    '9':set(['2','8','10']),
    '10':set(['2','3','9','11']),
    '11':set(['3','10','12']),
    '12':set(['3','4','11','13']),
    '13':set(['4','12','14']),
    '14':set(['4','5','13','15']),
    '15':set(['16','14']),
    '16':set(['15','17','5','6']),
    '17':set(['6','18','10','6']),
    '18':set(['19','7','17','6']),
    '19':set(['8','7','18'])
             }


def bfs(graph,start,end):
    queue = [(start,[start])]
    result = []

    while queue:
        n, path = queue.pop(0)
        if n == end:
            result.queue(path)
        else:
            for m in graph[n] -set(path):
                queue.append((m,path+[m]))
    return result
